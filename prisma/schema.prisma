datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String      @default(uuid()) @id
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  account       String      @unique
  email         String?     @unique
  twitter       Twitter?
  discord       String?     @unique
  ens           String?     @unique
  role          Role        @default(PLAYER)
  taskState     TaskState?
  active        Boolean     @default(true)
  ipinfo        IpInfo?
}

model IpInfo {
  id            String      @default(uuid()) @id
  user          User        @relation(fields: [userId], references: [id])
  userId        String      @unique
  ip            String?
  hostname      String?
  country       String?
  city          String?
  region        String?
  loc           String?
  org           String?
  postal        String?
  timezone      String?
}

model Twitter {
  id                  String      @default(uuid()) @id
  user                User        @relation(fields: [userId], references: [id])
  userId              String      @unique
  profileImageUrl     String?
  name                String?     @unique
  twitterId           String?     @unique
  username            String?     @unique
  followersCount      Int?
  followingCount      Int?
  tweetCount          Int?
  location            String?
  twitterCreatedAt    DateTime?
}

model TaskState {
  id                  String      @default(uuid()) @id
  user                User        @relation(fields: [userId], references: [id])
  userId              String      @unique
  hasWonGame          Boolean     @default(false)
  hasUsedFweb3Faucet  Boolean     @default(false)
  hasUsedMaticFaucet  Boolean     @default(false)
  hasSentTokens       Boolean     @default(false)
  hasMintedDiamondNFT Boolean     @default(false)
  hasBurnedTokens     Boolean     @default(false)
  hasSwappedTokens    Boolean     @default(false)
  hasVotedInPoll      Boolean     @default(false)
  hasDeployedContract Boolean     @default(false)
  trophyId            String?
}

enum Role {
  PLAYER
  ADMIN
  ROOT
}
